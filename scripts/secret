#!/bin/bash
#
# Script to encrypt / decrypt secrets.
#

SCRIPT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
. "${SCRIPT_DIR}/inc.functions.sh"

# Constants
SECRET_FILES=(
    buildSrc/src/main/kotlin/Secrets.kt
)

# Functions
function usage {
    echo -e "Usage: ${0} [COMMAND]"
    echo -e "Options:"
    echo -e "  --password PASSWORD"
    echo -e "Commands:"
    echo -e "  decrypt"
    echo -e "  encrypt"
    exit 1
}

# Command-line arguments
openssl_password_option=
openssl_command=
while [[ $# -gt 0 ]] ; do
    key="$1"
    case ${key} in
    decrypt)
        openssl_command=decrypt
        ;;
    encrypt)
        openssl_command=encrypt
        ;;
    -p|--password)
        openssl_password_option="-k $2"
        shift # past argument
        ;;
    -h|--help)
        usage
        ;;
    *)
        warn "Unknown option: ${key}"
        usage
        ;;
    esac
    shift # past argument or value
done

# Checks
[[ -n "${openssl_command}" ]] || usage

# Let's roll
case ${openssl_command} in
    decrypt)
        for file in "${SECRET_FILES[@]}" ; do
            approve "Decrypting ${file}.enc"
            safe openssl enc ${openssl_password_option} -d -aes-256-cbc \
                -in ${file}.enc -out ${file} -md sha256
            if [[ "$(file -b ${file})" = "data" ]] ; then
                rm -f ${file}
                die "Failed to decrypt ${file}"
            fi
        done
        ;;
    encrypt)
        for file in "${SECRET_FILES[@]}" ; do
            approve "Encrypting ${file}"
            safe openssl enc ${openssl_password_option} -aes-256-cbc -salt \
                -in ${file} -out ${file}.enc -md sha256
        done
        ;;
esac
